@using LearningManagementSystem.Services.Helpers
@using LearningManagementSystem.Core.SystemEnums
@using LearningManagementSystem.Core
@using System.Text.RegularExpressions;
@using X.PagedList.Web.Common
@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<DataEntity.Models.ViewModels.ExamsAndAssignmentsViewModel>
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@using LearningManagementSystem.Services.ControlPanel
@inject IEnrollTeacherCourseService CourseService
@inject ISemesterService SemesterService
@inject IEnrollStudentCourseService EnrollStudentCourseService
@inject ICourseCategoryService CourseCategoryService

@{
    var lookupName = new HashSet<string>() { GeneralEnums.MasterLookupCodeEnums.CourseAgeGroup.ToString() };
    var lookups = LookupHelper.GetLookupDetailsByMasterCode(lookupName, ViewBag.LangId);

    var paginations = LookupHelper.GetLookupDetailsByMasterCode(GeneralEnums.MasterLookupCodeEnums.Pagination.ToString(), ViewBag.LangId);
    var paginationValue = ViewBag.PaginationValue;
    var status = LookupHelper.GetStatuses(ViewBag.LangId);
    var fromCheckPublisheDate = (DateTime)ViewBag.FromPublisheDate;
    var toCheckPublisheDate = (DateTime)ViewBag.ToPublisheDate;
    var fromPublisheDateCheckFilter = $"{fromCheckPublisheDate.Date.Year}-{fromCheckPublisheDate.Date.Month:D2}-{fromCheckPublisheDate.Date.Day:D2}";
    var toPublisheDateCheckFilter = $"{toCheckPublisheDate.Date.Year}-{toCheckPublisheDate.Date.Month:D2}-{toCheckPublisheDate.Date.Day:D2}";
    var FromToPublisheDate = $"{fromPublisheDateCheckFilter} - {toPublisheDateCheckFilter}";
    var courses = CourseService.GetCourseList(ViewBag.LangId);
    var courseCategory = CourseCategoryService.GetAllCourseCategorys(ViewBag.LangId);
    var techers = CourseService.GetTeacherList(ViewBag.LangId);
    var semesters = SemesterService.GetSemestersList(ViewBag.LangId);
    var types = LookupHelper.GetExamsAndAssignmentsType(ViewBag.LangId);

}

<div class="col-md-12 col-sm-12 col-xs-12 tms-page">
    <div class="x_panel bg-transparent">
        <div class="tms-page-title row w-100">
            <div class="tms-title col-12 row">
                <div class="col-7">
                    <h4>@Localizer["Exams And Assignments Reports"] <small>@ViewData["Title"]</small></h4>
                </div>
                <div class="col-5 d-flex justify-content-end px-0">
                    <a id="btnDownLoad" onclick="Download()" class="btn tms-search-input mx-0" href="#">
                        <i class="fa fa-file-excel-o" aria-hidden="true"></i>
                        @Localizer["Download"]
                    </a>
                    <a style="display: none;" href="" target="_blank" class="nav-link" id="export-to-excel"></a>
                </div>
            </div>
            <div class="col-12">
                <form data-ajax="true" method="get" action="ExamsAndAssignmentsReports/GetData" id="Form1" data-ajax-success="GetData" data-ajax-begin="ShowSpinner" data-ajax-complete="HideSpinner">
                    <div class="row mt-3">
                        @Html.Hidden("pagination")
                        @Html.Hidden("page")
                        @Html.Hidden("table")
                        @Html.Hidden("filter.SecondOpen",true)
                        <div class="col-md-2 col-sm-3 col-xs-12 ">
                            @Html.DropDownList("filter.ReportType", new SelectList(types, "Id", "Name", ViewBag.ReportType), string.Empty, new { @class = "form-control chosen-select tms-ddl" })
                        </div>
                        <div class="col-md-2 col-sm-3 col-xs-12 ">
                            @Html.DropDownList("filter.Courses", new SelectList(courses, "Id", "CourseName"), Localizer["Course"].Value, new { @class = "form-control chosen-select tms-ddl", multiple = "multiple" })
                        </div>
                        <div class="col-md-2 col-sm-3 col-xs-12">
                            @Html.DropDownList("filter.Teacher", new SelectList(techers, "Id", "Name" ,ViewBag.Teacher), Localizer["Teacher"].Value, new { @class = "form-control chosen-select tms-ddl"})
                        </div>
                        <div class="col-md-2 col-sm-3 col-xs-12">
                            @Html.DropDownList("filter.Semester", new SelectList(semesters, "Id", "Name" ,ViewBag.Semester), Localizer["Semester"].Value, new { @class = "form-control chosen-select tms-ddl"})
                        </div>
                        <div class="col-md-2 col-sm-5 col-xs-12 top-30">
                            <label>@Localizer["Published Date"]</label>
                            <input type="text" placeholder="@Localizer["Published Date"]" class="form-control search-control tms-search-input" value="@FromToPublisheDate" name="filter.FromToPublisheDate" id="filter_FromToPublisheDate" readonly />
                        </div>
                        <div class="col-md-2 col-sm-3 col-xs-12">
                            @Html.DropDownList("filter.Status", new SelectList(status, "Id", "Name",ViewBag.Status), Localizer["Status"].Value, new { @class = "form-control chosen-select tms-ddl" })
                        </div>
                        <div class="col-md-2 col-sm-3 col-xs-12">
                            @Html.TextBox("filter.MarkFrom", ((int)ViewBag.MarkFrom > 0 ? (int)ViewBag.MarkFrom : null ), new { @class = "form-control search-control tms-search-input", placeholder = Localizer["Mark From"].Value })
                        </div>
                        <div class="col-md-2 col-sm-3 col-xs-12">
                            @Html.TextBox("filter.MarkTo", ((int)ViewBag.MarkTo > 0 ? (int)ViewBag.MarkTo : null ), new { @class = "form-control search-control tms-search-input", placeholder = Localizer["Mark To"].Value })
                        </div>
                        <div class="col-md-2 col-sm-3 col-xs-12 d-flex">
                            @Html.TextBox("filter.SectionName", (string)ViewBag.SectionName , new { @class = "form-control search-control tms-search-input", placeholder = Localizer["Section Name"].Value })
                        </div>
                        <div class="col-md-2 col-sm-3 col-xs-12 d-flex">
                            @Html.TextBox("searchText", null, new { @class = "form-control search-control tms-search-input", placeholder = Localizer["Search For ..."].Value })
                        </div>
                        <input class="btn btn-primary" type="submit" value=@Localizer["Search"] style="height:35px" />
                    </div>
                </form>
            </div>
        </div>
        <div class="x_content">
            <div class="table-responsive">
                <table class="tms-table">
                    <thead>
                        <tr class="tms-headings">
                            <th class="Type d-none">
                                @Localizer["Type"]
                            </th>
                            <th class="Name d-none">
                                @Localizer["Name"]
                            </th>
                            <th class="CourseName d-none">
                                @Localizer["Course Name"]
                            </th>
                            <th class="TeacherName d-none">
                                @Localizer["Teacher Name"]
                            </th>
                            <th class="SemesterName d-none">
                                @Localizer["Semester Name"]
                            </th>
                            <th class="SectionName d-none">
                                @Localizer["Section Name"]
                            </th>
                            <th class="PublicationDate d-none">
                                @Localizer["Publication Start Date"]
                            </th>
                            <th class="PublicationEndDate d-none">
                                @Localizer["Publication End Date"]
                            </th>
                            <th class="CreatedOn d-none">
                                @Localizer["Created On"]
                            </th>
                            <th class="Status d-none">
                                @Localizer["Status"]
                            </th>
                            <th class="NumberOfStudents d-none">
                                @Localizer["Number Of Students"]
                            </th>
                            <th class="NumberOfSubmitted d-none">
                                @Localizer["Number Of Submitted"]
                            </th>
                            <th class="NumberOfSuccess d-none">
                                @Localizer["Number Of Success"]
                            </th>
                            <th>
                                <a onclick="ShowEditTable()" class="btn btn-sm btn-secondary add-cursor text-white my-0" title="@Localizer["Edit Programs"]">
                                    <i class="fa fa-tasks"></i>
                                </a>
                                @Html.DropDownList("pagin", new SelectList(paginations, "Code", "Name", paginationValue), null, new { @class = "mx-3 p-1 rounded", style = "max-height: 26px;min-width: 49px;", required = "required", @onchange = "ChangePagenation()" })
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr class="tms-tr">
                                <td class="Type d-none">
                                    @LookupHelper.GetExamsAndAssignmentsTypeById(item.Type ,(int)ViewBag.LangId)?.Name
                                    @* @Localizer[Regex.Replace(Enum.GetName(typeof(GeneralEnums.ExamsAndAssignmentsEnums), item.Type), "(?<!^)([A-Z])", " $1")] *@
                                </td>
                                <td class="Name d-none">
                                    @item.Name
                                </td>
                                <td class="CourseName d-none">
                                    <a href="@Url.Action("EditPage", "EnrollmentCourse", new {Area = "ControlPanel" , id = item.EnrollCourseId})">@item.EnrollCourse?.CourseName</a>
                                </td>
                                <td class="TeacherName d-none">
                                    @item.FullName
                                </td>
                                <td class="SemesterName d-none">
                                    @item.SemesterName
                                </td>
                                <td class="SectionName d-none">
                                    @item.EnrollCourse?.SectionName
                                </td>
                                <td class="PublicationDate d-none">
                                    @item.PublicationDate?.ToShortDateString()
                                </td>
                                <td class="PublicationEndDate d-none">
                                    @item.PublicationEndDate?.ToShortDateString()
                                </td>
                                <td class="CreatedOn d-none">
                                    @item.CreatedOn.ToShortDateString()
                                </td>
                                <td class="Status d-none">
                                    @LookupHelper.GetStatusById(item.Status , ViewBag.LangId)?.Name
                                </td>
                                <td class="NumberOfStudents d-none">
                                    @item.NumberOfStudents
                                </td>
                                <td class="NumberOfSubmitted d-none">
                                    <button class="btn btn-success" onclick="ShowSubmitted(@item.Type , @item.Id , @item.EnrollCourseId)">
                                        @item.NumberOfSubmitted
                                    </button>
                                </td>
                                <td class="NumberOfSuccess d-none">
                                    @item.NumberOfSuccess
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                @if (Model.PageCount > 0)
                {
                    <div class="paging-div mb-5">
                        @Html.PagedListPager(Model, page => Url.Action("GetData", new { page, searchText = ViewBag.searchText , CourseCategory = ViewBag.CourseCategory ,
                    FromPublisheDate = ViewBag.FromPublisheDate, ToPublisheDate = ViewBag.ToPublisheDate ,Status = ViewBag.Status, MarkFrom = ViewBag.MarkFrom , MarkTo = ViewBag.MarkTo
                                 ,
                                Courses = ViewBag.Courses,
                                Teacher = ViewBag.Teacher,
                                Semester = ViewBag.Semester,
                                SecondOpen = true,
                                ReportType = ViewBag.ReportType,
                                SectionName = ViewBag.SectionName
                    }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "main",OnBegin = "ShowSpinner", OnComplete = "HideSpinner" }))
                        <div class="d-flex justify-content-center">@Localizer["Page"] <p class="text-danger px-1">@(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)</p>@Localizer["from"] <p class="text-primary px-1">@Model.PageCount</p> @Localizer["Courses Number:"]  <p class="text-primary px-1">@Model.TotalItemCount</p> </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
        table = '@ViewBag.Table'.split(',');
        GetTable(s);
        $("#filter_FromToPublisheDate").setDatePickRange('@fromPublisheDateCheckFilter', '@toPublisheDateCheckFilter');

        SetMultiSelect(@Html.Raw(Json.Serialize(ViewBag.Courses)), "#filter_Courses")
    });

    function SetMultiSelect(val, id) {
        var selectedIds = val.map(function (id) {
            return id.toString();
        });
        if (selectedIds != null)
            $(id).val(selectedIds).trigger('chosen:updated');
    }
</script>