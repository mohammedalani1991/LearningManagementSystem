@using LearningManagementSystem.Core.SystemEnums
@using LearningManagementSystem.Services.Helpers
@using X.PagedList.Web.Common
@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<DataEntity.Models.EfModels.EnrollStudentCourse>
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@{
    var paginations = LookupHelper.GetLookupDetailsByMasterCode(GeneralEnums.MasterLookupCodeEnums.Pagination.ToString(), ViewBag.LangId);
    var paginationValue = ViewBag.PaginationValue;
}
<div class="col-md-12 col-sm-12 col-xs-12 tms-page">
    <div class="x_panel bg-transparent">
        <div class="x_content">
            <div class="table-responsive">
                <table class="tms-table">
                    <thead>
                        <tr class="tms-headings">
                            <th>
                                @Localizer["Course Name"]
                            </th>
                            <th>
                                @Localizer["Status"]
                            </th>
                            <th>
                                @Localizer["Price/Month"]
                            </th>
                            <th>
                                @Localizer["Is Pass"]
                            </th>
                            <th>
                                @Localizer["Mark"]
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Count == 0)
                        {
                            <tr class="tms-tr">
                                <td colspan="4">@Localizer["No data available in the table"] </td>
                            </tr>
                        }
                        @foreach (var item in Model)
                        {
                            <tr class="tms-tr">
                                <td>
                                    <a class="tablelink" href="#" onclick="ShowCourseDetiles(@item.Id)">
                                        @Html.DisplayFor(modelItem => item.Course.Course.CourseName)
                                    </a>
                                </td>
                                <td>
                                    @LookupHelper.GetStatusById(item.Status , (int)ViewBag.LangId)?.Name
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Price)
                                </td>
                                <td>
                                    @if (item.IsPass == true)
                                    {
                                        <span class="fa fa-check"></span>
                                    }
                                    else
                                    {
                                        <span class="fa fa-times"></span>
                                    }
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Mark)
                                </td>

                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="paddtop-Page">
                @if (Model.PageCount > 0)
                {
                    <div class="paging-div">
                        @Html.PagedListPager(Model, page => Url.Action("GetEnrollStudentCourses", new {page, searchText = ViewBag.searchText , studentId =ViewBag.StudentId}), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "GetData" }))
                        <div class="d-flex justify-content-center">@Localizer["Page"] <p class="text-danger px-1">@(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)</p>@Localizer["from"] <p class="text-primary px-1">@Model.PageCount</p> @Localizer["Item No:"]  <p class="text-primary px-1">@Model.TotalItemCount</p> </div>
                    </div>
                }

            </div>
        </div>
    </div>
</div>
