@using LearningManagementSystem.Core.SystemEnums
@using LearningManagementSystem.Services.Helpers
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.AspNetCore.Localization
@using LearningManagementSystem.Core;
@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = Localizer["Calendar"];
    var lookupName = new HashSet<string>() { GeneralEnums.MasterLookupCodeEnums.CalendarType.ToString() };
    var lookups = LookupHelper.GetLookupDetailsByMasterCode(lookupName, ViewBag.LangId);
    var CalenderType = lookups[GeneralEnums.MasterLookupCodeEnums.CalendarType.ToString()];
}

<div id="Calendar" class="tabcontent px-3">
    <div class="row justify-content-between mb-4 align-items-end px-3">
        <p class="col d-block d-lg-none text-end">
            <button class="btn btn-primary" type="button" data-bs-toggle="collapse"
                    data-bs-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
                @Localizer["Search and Filter"]
            </button>
        </p>

        <div class=" col-12 collapse d-lg-block" id="collapseExample">
            <form>
                <div class="row align-items-center justify-content-end">
                    <input type="text" id="txtCalendarSearch" class="form-control search-control tms-search-input col-md-4 col-6" placeholder="&#xf002; @Localizer["Search"].Value">
                    <div class="col-md-3 col-sm-6 col-xs-12 px-1">
                        @Html.DropDownList("ddlCalendarType", new SelectList(CalenderType, "Id", "Name"), Localizer["Select Type"].Value, new { @class = "form-control chosen-select tms-ddl mx-3" })
                    </div>
                    <button class="btn btn-outline-primary Export ms-lg-auto mx-2">@Localizer["Export"]</button>
                    <button type="button" id="btnCalendarSerach" class="btn btn-primary Export">@Localizer["Submit"]</button>
                </div>
            </form>
        </div>
    </div>
    <div class="">
        <div id="calendar"></div>
    </div>
</div>


<style>
    .fc-event {
        cursor: pointer;
    }
</style>

<script>
    async function GetCalendarDataForProfile(id) {
        var CalendarTitle = '@Localizer["Title :"]';
        var Calendardescription = '@Localizer["Description :"]';
        var fetchInfoStart;
        var fetchInfoEnd;
        var calendarEl = document.getElementById('calendar');
        var calendar = await new FullCalendar.Calendar(calendarEl, {
            timeZone: 'UTC',
            initialView: "dayGridMonth",
            initialDate: new Date().toISOString().split('T')[0],
            lazyFetching: false,
            navLinks: true, // can click day/week names to navigate views
            editable: false,
            responsive: true,
            eventLimit: true, // allow "more" link when too many events
            headerToolbar: {
                left: "prev,next today",
                center: "title",
                right: "dayGridMonth,timeGridWeek,timeGridDay,listMonth"
            },
            eventClick: function (info) {
                var eventObj = info.event;
                $('#DetailsCalendar .modal-content .modal-title').html(CalendarTitle + ' ' + ((info.event.title) ? info.event.title : '--'));
                $('#DetailsCalendar .modal-content .CalendarDescription').html(Calendardescription + ' <br /><br />' + ((info.event.extendedProps.description) ? info.event.extendedProps.description : '--'));
                $('#DetailsCalendar').modal("show");
            },
            events: async function (fetchInfo, successCallback, failureCallback) {
                ShowSpinner();
                fetchInfoStart = fetchInfo.startStr;
                fetchInfoEnd = fetchInfo.endStr;
                await $.ajax({
                    type: "POST",
                    url: "@Url.Action("GetCalendarDataForProfile","Student", new { Area = "Reports" })",
                    data: {
                        studentId: id,
                        Name: $("#txtCalendarSearch").val(),
                        TypeID: $("#ddlCalendarType").val(),
                        startDate: fetchInfo.startStr,
                        endDate: fetchInfo.endStr,
                    },
                    headers: {
                        'RequestVerificationToken': Token
                    },
                    success: function (result) {
                        var data = result.data;
                        HideSpinner();
                        var events = [];
                        $.each(data, function (i, item) {
                            events.push({
                                title: data[i].name,
                                start: data[i].startDate,
                                end: data[i].endDate,
                                color: "#00c0ef",
                                description: data[i].description,
                            });
                        });
                        successCallback(events);
                        if (result.lang == 7) {
                            calendar.setOption('locale', 'ar');
                            calendar.setOption('direction', 'rtl');

                        }
                    }, error: function () {
                        HideSpinner();
                    }
                });
            },
            eventColor: '#378006',
            loading: function (isLoading) {
                if (isLoading) {
                    ShowSpinner();
                }
                else {
                    HideSpinner();
                    $(".fc-header-toolbar").removeClass("fc-toolbar-ltr");
                }
            }
        })

        calendar.render();

        $("#btnCalendarSerach").click(function () {
            calendar.refetchEvents();
        });
        $("#txtExportCalendarData").click(function (e) {
            e.preventDefault();
            location.href = 'Calendar/ExportForGoogleCalendar?Name=' + $("#txtCalendarSearch").val() + '&TypeID=' + $("#ddlCalendarType").val() + '&startDate=' + fetchInfoStart + '&endDate=' + fetchInfoEnd + '';
        });
    }

    GetCalendarDataForProfile("@ViewBag.StudentId")
</script>