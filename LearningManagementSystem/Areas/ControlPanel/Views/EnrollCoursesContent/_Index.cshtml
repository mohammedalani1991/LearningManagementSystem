@using LearningManagementSystem.Core.SystemEnums
@using LearningManagementSystem.Services.Helpers
@using X.PagedList.Web.Common
@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<DataEntity.Models.EfModels.EnrollSectionOfCourse>
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@using Microsoft.AspNetCore.Antiforgery
@inject IAntiforgery Antiforgery
@{

    var paginations = LookupHelper.GetLookupDetailsByMasterCode(GeneralEnums.MasterLookupCodeEnums.Pagination.ToString(), ViewBag.LangId);
    var paginationValue = ViewBag.PaginationValue;
    var tokenSet = Antiforgery.GetAndStoreTokens(Context);
    var MainUrl = Url.Action("GetData", new { page = ViewBag.page, CourseId = ViewBag.CourseId });
}
<div class="col-md-12 col-sm-12 col-xs-12 tms-page">
    <input type="hidden" id="EnrollmentCourseCurrentUrl" value="@MainUrl" />
    <div class="x_panel bg-transparent">
        <div class="tms-page-title d-flex">
            <div class="tms-title">
            </div>
            <div class="tms-action d-flex justify-content-end">
                <div class="col-md-7 col-sm-12 col-xs-12">

                    <form data-ajax="true" method="get" action="/Trainer/EnrollCoursesContent/GetData" id="Form1" data-ajax-success="GetData" data-ajax-begin="ShowSpinner" data-ajax-complete="HideSpinner">

                        @Html.Hidden("table")
                        @Html.Hidden("pagination")
                        @Html.Hidden("Page")
                        @Html.Hidden("CourseId")
                        <div class="float-start">
                            @*@Html.DropDownList("CourseId",new SelectList(ViewBag.TrainerCourses, "CourseId", "CourseName"),  Localizer["Search In Courses"].Value, new { @class = "form-select Filter custmSelect" })
                            <input class="btn btn-outline-primary" onclick="BtnSearchRestPageNumber()" type="submit" value=@Localizer["Search"] />*@
                        </div>
                        @if (AuthenticationHelper.CheckAuthentication("EnrollCoursesContent", "Create", User.Identity.Name))
                        {
                            <button class="tms-btn float-end mx-2" type="button" onclick="ShowAddCoursesContent(@ViewBag.CourseId)"><img src="~/img/add-to-list.png" /> @Localizer["Add New Sections And Lectures"]</button>
                        }
                    </form>
                </div>
            </div>
        </div>
        <div class="x_content">
            <div class="table-responsive">
                <table class="tms-table">
                    <thead>
                        <tr class="tms-headings">
                            <th class="Id ">
                                @Localizer["Id"]
                            </th>
                            <th class="SectionName ">
                                @Localizer["Section Name"]
                            </th>
                            <th class="Lectures ">
                                @Localizer["Lectures"]
                            </th>
                            <th class="Status ">
                                @Localizer["Status"]
                            </th>
                            <th class="CreatedBy ">
                                @Localizer["Created By"]
                            </th>
                            <th class="CreatedOn ">
                                @Localizer["Created On"]
                            </th>
                            <th>
                                @Localizer["Choose a process"]
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Count == 0)
                        {
                            <tr class="tms-tr">
                                <td colspan="9">@Localizer["No data available in the table"] </td>
                            </tr>
                        }
                        @foreach (var item in Model)
                        {
                            <tr class="tms-tr">
                                <td class="Id ">
                                    @Html.DisplayFor(modelItem => item.Id)
                                </td>
                                <td class="SectionName ">
                                    @Html.DisplayFor(modelItem => item.SectionName)
                                </td>
                                <td class="Lectures">
                                    <ul class="list-group m-2" style="max-height:120px;overflow:auto">
                                        @foreach (var Lecture in item.EnrollLectures)
                                        {
                                            <li class="list-group-item list-group-item-action list-group-item-light">@Lecture.LectureName</li>
                                        }
                                    </ul>
                                </td>
                                <td class="Status ">
                                    @LookupHelper.GetStatusById(item.Status ,ViewBag.LangId)?.Name
                                </td>
                                <td class="CreatedBy ">
                                    @LookupHelper.GetFullNameByEmail(item.CreatedBy ,(int)ViewBag.LangId)
                                </td>
                                <td class="CreatedOn ">
                                    @Html.DisplayFor(modelItem => item.CreatedOn)
                                </td>
                                <td>
                                    <div class="nav-item dropdown open tms-choose-op mx-auto">
                                        <a href="javascript:;" class="user-profile dropdown-toggle" aria-haspopup="true" data-toggle="dropdown" aria-expanded="false">
                                            @Localizer["Choose a process"]
                                        </a>
                                        <div class="dropdown-menu tms-dropdown-menu" aria-labelledby="navbarDropdown">
                                            @if (AuthenticationHelper.CheckAuthentication("EnrollCoursesContent", "Edit", User.Identity.Name))
                                            {
                                               <button class="tms-dropdown-menu-item tms-first-drop-item"  onclick="ShowEditCoursesContent(@item.Id, @ViewBag.LangId,@ViewBag.Page)">@Localizer["Edit"]</button>
                                            }
                                            @if (AuthenticationHelper.CheckAuthentication("EnrollCoursesContent", "View", User.Identity.Name))
                                            {
                                               <button class="tms-dropdown-menu-item tms-first-drop-item"  onclick="ShowDetailsCoursesContent(@item.Id, @ViewBag.LangId)">@Localizer["Details"]</button>
                                            }

                                            @if (AuthenticationHelper.CheckAuthentication("EnrollCoursesContent", "Delete", User.Identity.Name))
                                            {
                                               <button class="tms-dropdown-menu-item tms-first-drop-item"  onclick="ShowDeleteCoursesContent(@item.Id, @ViewBag.LangId,@ViewBag.Page)"> @Localizer["Delete"]</button>
                                            }
                                            @if (AuthenticationHelper.CheckAuthentication("EnrollCoursesContent", "Edit", User.Identity.Name))
                                            {
                                               <button class="tms-dropdown-menu-item tms-first-drop-item"  onclick="ShowLecturesContent(@item.Id, @ViewBag.LangId,@ViewBag.Page)"> @Localizer["Lectures Resources"]</button>
                                            }
                                        </div>
                                    </div>
                                 
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="paddtop-Page">
                @if (Model.PageCount > 0)
                {
                    <div class="paging-div">
                        @Html.PagedListPager(Model, page => Url.Action("GetData", new { page, courseId = ViewBag.CourseId }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "GetData" }))
                        <div class="d-flex justify-content-center">@Localizer["Page"] <p class="text-danger px-1">@(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)</p>@Localizer["from"] <p class="text-primary px-1">@Model.PageCount</p> @Localizer["Item No:"]  <p class="text-primary px-1">@Model.TotalItemCount</p> </div>
                    </div>
                }
            </div>


        </div>
    </div>
</div>


<script>
    var AddMassegeErrorInvalidSectionData = '@Localizer["An error occurred while adding, You must add a valid section name for the selected course!"]';
    var AddMassegeErrorInvalidLectureData = '@Localizer["An error occurred while adding, You must add a valid lecture name for the selected section!"]';
    var EditMassegeErrorInvalidSectionData = '@Localizer["An error occurred while editing, You must add a valid section name for the selected course!"]';
    var EditMassegeErrorInvalidLectureData = '@Localizer["An error occurred while editing, You must add a valid lecture name for the selected section!"]';
</script>

