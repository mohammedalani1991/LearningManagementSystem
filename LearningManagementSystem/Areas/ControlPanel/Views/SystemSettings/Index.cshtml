@using LearningManagementSystem.Services.Helpers
@using LearningManagementSystem.Core.SystemEnums
@using X.PagedList.Mvc.Core
@using LearningManagementSystem.Core
@model X.PagedList.IPagedList<DataEntity.Models.EfModels.SystemSetting>
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@{
    var lookupName = new HashSet<string>() { GeneralEnums.MasterLookupCodeEnums.Languages.ToString(), GeneralEnums.MasterLookupCodeEnums.Pagination.ToString(),
     GeneralEnums.MasterLookupCodeEnums.SettingTypes.ToString()};
    var lookups = LookupHelper.GetLookupDetailsByMasterCode(lookupName, ViewBag.LangId);


    var paginations = LookupHelper.GetLookupDetailsByMasterCode(GeneralEnums.MasterLookupCodeEnums.Pagination.ToString(), ViewBag.LangId);
    var paginationValue = ViewBag.PaginationValue;
    var settingTypes = lookups[GeneralEnums.MasterLookupCodeEnums.SettingTypes.ToString()];
    var languages = lookups[GeneralEnums.MasterLookupCodeEnums.Languages.ToString()];
    var superAdmin = LookupHelper.GetSuperAdmins();
}


<div class="col-md-12 col-sm-12 col-xs-12 tms-page">
    <div class="x_panel bg-transparent">
        <div class="tms-page-title d-flex">
            <div class="tms-title">
                <h4><small>@Localizer["Settings"]</small></h4>
                <div class="clearfix"></div>
            </div>
            <div class="tms-action d-flex justify-content-end">
                <div class="col-md-7 col-sm-12 col-xs-12">

                    @using (Html.BeginForm("Index", "SystemSettings", FormMethod.Get, new { id = "Form1" }))
                    {
                        <div class="d-flex justify-content-end">
                            @Html.Hidden("resetTo", 1)
                            @Html.Hidden("pagination")
                            <div class="col-md-6 col-sm-3 col-xs-12">
                                @Html.TextBox("searchText", null, new { @class = "form-control search-control tms-search-input", placeholder = Localizer["Search For ..."].Value })
                            </div>

                            <div>
                                <input class="btn btn-primary" type="submit" value=@Localizer["Search"] />
                            </div>
                        </div>
                    }
                </div>
                @if (AuthenticationHelper.CheckAuthentication("Settings", "Create", User.Identity.Name))
                {
                    <div>
                        <button class="tms-btn" type="button" onclick="ShowAddRow()"><img src="~/img/add-to-list.png" /> @Localizer["Add New"]</button>
                    </div>

                }
          
            </div>
        </div>
        <div class="x_content">
            <div class="table-responsive">
                <table class="tms-table">
                    <thead>
                        <tr class="tms-headings">
                            <th>
                                @Localizer["Language"]
                            </th>
                            <th>
                                @Localizer["Name"]
                            </th>
                            <th>
                                @Localizer["Value"]
                            </th>
                            <th>
                                @Localizer["Type"]
                            </th>
                           
                            <th>
                                @if (AuthenticationHelper.CheckAuthentication("Settings", "Create", User.Identity.Name))
                                {
                                    @Html.DropDownList("pagin", new SelectList(paginations, "Code", "Name", paginationValue), null, new { @class = "mx-3 p-1 rounded", style = "max-height: 26px;min-width: 49px;", required = "required", @onchange = "ChangePagenation()" })
                                }
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr class="tms-tr" id="AddRow" style="display:none">
                            <td>
                                @Html.DropDownList("LanguageId", new SelectList(languages, "Id", "Name", ViewBag.LangId), new { @class = "select-text col-10", required = "required"})
                                <span class="select-bar col-10 m-auto" />
                                <span class="Message" style="color:red;font-weight:bold;display:none;">@Localizer["All Fileds Reqiered"]</span>
                            </td>
                            <td class="col-2">
                                <input type="text" id="Name" name="Name" class="form__field col-10" required />
                            </td>
                            <td class="col-2">
                                <input type="text" id="Value" name="Value" class="form__field col-10" required />
                            </td>
                            <td>
                                @Html.DropDownList("Type", new SelectList(settingTypes, "Code", "Name"), string.Empty, new { @class = "select-text col-10", required = "required", onchange = "ChangeSettingType()", style = "min-width: 110px;" })
                                <span class="select-bar col-10 m-auto" />
                            </td>
                           
                            <td style="width: 25%;">
                                <div class="nav-item dropdown open tms-choose-op mx-auto">
                                    <a href="javascript:;" class="user-profile dropdown-toggle" aria-haspopup="true" data-toggle="dropdown" aria-expanded="false">
                                        @Localizer["Choose a process"]
                                    </a>
                                    <div class="dropdown-menu tms-dropdown-menu" aria-labelledby="navbarDropdown">

                                        @if (AuthenticationHelper.CheckAuthentication("Settings", "Create", User.Identity.Name))
                                        {
                                            <button onclick="AddSetting(event)" type="button" class="tms-dropdown-menu-item tms-first-drop-item">@Localizer["Add"]</button>
                                            <button onclick="HideAddRow(event)" type="button" class="tms-dropdown-menu-item">@Localizer["Cancel"]</button>
                                        }
                                    </div>
                                </div>
                            </td>
                        </tr>

                        @foreach (var item in Model)
                        {
                            <tr class="tms-tr" id="@item.Id">
                                <td>
                                    @if (ViewBag.LangId == (int)GeneralEnums.LanguageEnum.English)
                                    {
                                        <span class="LanguageTD">@Localizer["English"]</span>
                                    }
                                    else
                                    {
                                        <span class="LanguageTD">@Localizer["Arabic"]</span>
                                    }
                                    @Html.DropDownList("Language", new SelectList(languages, "Id", "Name", ViewBag.LangId), new { @class = "select-text col-10", required = "required", onchange = "GetSettingByLanguage(" + item.Id + ")", style = "display:none;min-width: 110px;" })
                                    <span class="select-bar col-10 m-auto" />
                                    <span class="RowMessage" style="color:red;font-weight:bold;display:none;">@Localizer["All Fileds Reqiered"]</span>
                                </td>
                                <td class="col-2">
                                    <span class="NameTD">@item.Name</span>
                                    <input type="text" class="Name form__field col-10" style="display:none;" name="Name" value="@item.Name" />
                                </td>
                                <td class="col-2">
                                    @{
                                        var type = LookupHelper.GetLookupDetailsById(item.TypeId.GetValueOrDefault(0), ViewBag.LangId);
                                    }
                                    @if (type == null)
                                    {
                                        <span class="ValueTD">@item.Value</span>
                                        <input type="text" style="display:none;" class="Value form__field col-10" name="Value" value="@item.Value" />
                                    }
                                    else
                                    {
                                        if (type.Code.Equals("text"))
                                        {
                                            <span class="ValueTD">@item.Value</span>
                                            <input type="text" style="display:none;" class="Value form__field col-10" name="Value" value="@item.Value" />
                                        }
                                        if (type.Code.Equals("date"))
                                        {
                                            <span class="ValueTD">@item.Value</span>
                                            <input type="date" style="display:none;" class="Value form__field col-10" name="Value" value="@item.Value" />
                                        }
                                        if (type.Code.Equals("checkbox"))
                                        {
                                            if (item.Value == "on")
                                            {
                                                <span class="ValueTD"><i class="fa fa-check"></i></span>
                                                <input type="checkbox" style="display:none;" class="Value form__field col-10" onChange="ChangeValue(@item.Id)" value="on" name="Value" checked />
                                            }
                                            else
                                            {
                                                <span class="ValueTD"><i class="fa fa-times"></i></span>
                                                <input type="checkbox" style="display:none;" class="Value form__field col-10" onChange="ChangeValue(@item.Id)" value="off" name="Value" />
                                            }
                                        }
                                        if (type.Code.Equals("number"))
                                        {
                                            <span class="ValueTD">@item.Value</span>
                                            <input type="number" style="display:none;" class="Value form__field col-10" name="Value" value="@item.Value" />
                                        }
                                        if (type.Code.Equals("datetime-local"))
                                        {
                                            <span class="ValueTD">@item.Value</span>
                                            <input type="datetime-local" style="display:none;" class="Value form__field col-10" name="Value" value="@item.Value" />
                                        }
                                    }
                                </td>
                                <td>
                                    <span class="TypeTD">
                                        @if (type != null)
                                        {
                                            @Localizer[type?.Name]
                                        }
                                    </span>
                                    @Html.DropDownList("TypeCode", new SelectList(settingTypes, "Code", "Name", type?.Code), string.Empty, new { @class = "select-text col-10", onchange = "ChangeSettingTypeTable(" + item.Id + ")", style = "display:none;min-width: 110px;" })
                                    <span class="select-bar col-10 m-auto" />
                                </td>
                               @*  <td>
                                    <span class="SuperAdmin">
                                        @item.SuperAdmin?.Name
                                    </span>
                                    @Html.DropDownList("SuperAdminId", new SelectList(superAdmin, "Id", "Name"), string.Empty, new { @class = "select-text col-10" , style = "display:none;min-width: 110px;" })
                                    <span class="select-bar col-10 m-auto" />
                                </td> *@
                                
                                <td style="width: 25%;">
                                    <div class="nav-item dropdown open tms-choose-op mx-auto">
                                        <a href="javascript:;" class="user-profile dropdown-toggle" aria-haspopup="true" data-toggle="dropdown" aria-expanded="false">
                                            @Localizer["Choose a process"]
                                        </a>
                                        <div class="dropdown-menu tms-dropdown-menu" aria-labelledby="navbarDropdown">

                                            @if (AuthenticationHelper.CheckAuthentication("Settings", "Edit", User.Identity.Name))
                                            {
                                                <button onclick="UpdateSetting(@item.Id)" type="button" class="tms-dropdown-menu-item tms-first-drop-item edit">@Localizer["Edit"]</button>
                                            }
                                            @if (AuthenticationHelper.CheckAuthentication("Settings", "Edit", User.Identity.Name))
                                            {
                                                <button onclick="SaveSetting(@item.Id)" type="button" class="tms-dropdown-menu-item save" style="display:none">@Localizer["Save"]</button>
                                                <button onclick="CancelEdit(@item.Id)" type="button" class="tms-dropdown-menu-item cancel" style="display:none">@Localizer["Cancel"]</button>
                                            }
                                            @if (AuthenticationHelper.CheckAuthentication("Settings", "Delete", User.Identity.Name))
                                            {
                                                <button onclick="Delete(@item.Id)" type="button" class="tms-dropdown-menu-item delete">@Localizer["Delete"]</button>
                                            }
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div class="modal fade" id="delete_confirmation_modal" role="dialog" style="display: none;">
                    <div class="modal-dialog" style="margin-top: 260.5px;">
                        <div class="modal-content">
                            <div class = "row">
                                <div class = "col-md-12 col-sm-12 col-xs-12">
                                    <div class = "d-flex tms-page-popup-title py-4">
                                        <div data-dismiss = "modal" class = "tms-close-div">
                                            <i class = "fa fa-close"></i>
                                        </div>
                                        <div class = "tms-table-popup-title" style = "width:97%;">
                                            @Localizer["Are you sure you want to delete this?"]
                                        </div>
                                    </div>
                                    <div class = "x_content">
                                        <br/>
                                        @using (Html.BeginForm("DeleteConfirmed", "SystemSettings", FormMethod.Post, new {id = "delete_data"}))
                                        {
                                            <input type = "hidden" id = "delete_item_id" name = "id" value = "">
                                            <input type = "hidden" id = "delete_page_id" name = "page" value = "@ViewBag.Page">
                                            <p class="p-3 text-center tms-delete-msg">@Localizer["You are trying to delete the information and data of this item, are you sure to delete all its details?"]</p>
                                            <div class="text-center">
                                                <button type="submit" onclick="myfun()" class="tms-save-btn" style="width: 100px;" >@Localizer["Delete"]</button>
                                                <button type="button" class="tms-cancel-btn px-10" style="width: 100px;" data-dismiss = "modal">@Localizer["Cancel"]</button>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                @if (Model.PageCount > 0)
                {
                    <div class="paging-div">
                        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchText = ViewBag.searchText }))
                        <div class="d-flex justify-content-center">@Localizer["Page"] <p class="text-danger px-1">@(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)</p>@Localizer["from"] <p class="text-primary px-1">@Model.PageCount</p> @Localizer["Item No:"]  <p class="text-primary px-1">@Model.TotalItemCount</p> </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<div id='ShowTimeZone' style="z-index: 1050;" role="dialog" class='modal  fade'>
    <div class="modal-dialog modal-dialog-centered">
        <div id='ShowTimeZoneDiv' class="modal-content">
        </div>
    </div><!-- /.modal-dialog -->
</div>
@section JavaScript{

    <script>
        function ChangeSettingType() {
            var type = $("#Type").val();
            if (type != "") {
                $('#Value').attr("type", type);
            }
        }
        function ChangeSettingTypeTable(id) {
            var type = $("#" + id + " #TypeCode").val();
            if (type != "") {
                $("#" + id + " .Value").attr("type", type);
                if (type == "checkbox") {
                    $("#" + id + " .Value").val("off");
                } else {
                    $("#" + id + " .Value").val("");
                }

            }
        }

        function ShowAddRow() {
            $("#AddRow").show();
            $("#addIcon").hide();
        }

        function HideAddRow() {
            $("#AddRow").hide();
            $("#addIcon").show();
        }

        function AddSetting(e) {
            e.preventDefault();
            var systemSetting = {};
            var langId = $('#LanguageId').val();
            
            var name = $('#Name').val();
            var value = $('#Value').val();
            var type = $('#Type').val();

            systemSetting.LanguageId = langId;
            systemSetting.Value = value;
            systemSetting.Name = name;
            systemSetting.Type = type;
            

            if (langId > 0 && type != "" && name != "" && value != "") {
                ShowSpinner();
                $.post("/ControlPanel/SystemSettings/Create",
                    { systemSetting: systemSetting },
                    function(data) {
                    HideSpinner();
                        toastr.success(addMassege);
                        setTimeout(
                            function() {
                                location.reload();
                            }, 1000);
                    },
                ).fail(function(data) {
                    HideSpinner();
                    toastr.error(addMassegeError);

                });
            } else {
                $(".Message").show();
            }
        }

        function UpdateSetting(id) {
            $("#" + id + ' .save').show();
            $("#" + id + ' .cancel').show();
            $("#" + id + ' .edit').hide();
            $("#" + id + ' .delete').hide();
            $("#" + id + ' #Language').show();
            $("#" + id + ' .LanguageTD').hide();
            $("#" + id + " .Name").show();
            $("#" + id + ' .NameTD').hide();
            $("#" + id + " .Value").show();
            $("#" + id + ' .ValueTD').hide();
            $("#" + id + " #TypeCode").show();
            $("#" + id + ' .TypeTD').hide();
            $("#" + id + " #SuperAdminId").show();
            $("#" + id + ' .SuperAdmin').hide();

            $(".TimeZone").remove();
            if($("#" + id + " .Name").val() == 'TimeZone')
            {
                 $("#" + id + " #Language").attr('readonly', true).addClass("PreventClick");
                 $("#" + id + " .Name").attr('readonly', true).addClass("PreventClick");
                 $("#" + id + " #TypeCode").val("text").attr('readonly', true).addClass("PreventClick");
                 $("#" + id + " .Value").attr('readonly', true).addClass("PreventClick");
                 $("#" + id + " .Value").parent().append("<i class='TimeZone fa fa-gears' onclick='ShowTimeZone("+id+")' aria-hidden='true'></i>");
            }


        }

        function SaveSetting(id) {
             $(".TimeZone").remove();
            var systemSetting = {};
            var langId = $("#" + id + ' #Language').val();
            var name = $("#" + id + " .Name").val();
            var value = $("#" + id + " .Value").val();
            var type = $("#" + id + " #TypeCode").val();
            var suberAdmin = $("#" + id + " #SuperAdminId").val();
            systemSetting.LanguageId = langId;
            systemSetting.Value = value;
            systemSetting.Id = id;
            systemSetting.Name = name;
            systemSetting.Type = type;
            systemSetting.SuperAdminId = suberAdmin;

            if (langId > 0 &&  type != "" && name != "" && value != "") {
                ShowSpinner();
                $.post("/ControlPanel/SystemSettings/Edit",
                    { systemSettingViewModel: systemSetting },
                    function(data) {
                    HideSpinner();
                        toastr.success(editMassege);

                        $("#" + id + ' .ValueTD').empty();
                        if (type == "checkbox") {
                            $("#" + id + " .TypeTD").text("@Localizer["boolean"]");
                            if (value == "on") {
                                $("#" + id + ' .ValueTD').append('<i class="fa fa-check"></i>');
                            } else {
                                $("#" + id + ' .ValueTD').append('<i class="fa fa-times"></i>');
                            }

                        } else {
                            if (type == "date") {
                                $("#" + id + " .TypeTD").text("@Localizer["Date"]");
                            }
                            if (type == "number") {
                                $("#" + id + " .TypeTD").text("@Localizer["Number"]");
                            }
                            if (type == "text") {
                                $("#" + id + " .TypeTD").text("@Localizer["Text"]");
                            }
                            if (type == "datetime-local") {
                                $("#" + id + " .TypeTD").text("@Localizer["Date Time"]");
                            }
                            $("#" + id + ' .ValueTD').text(value);
                        }

                        if (langId == @((int)GeneralEnums.LanguageEnum.English)) {
                            $("#" + id + ' .LanguageTD').text('@Localizer["English"]');
                        } else {
                            $("#" + id + ' .LanguageTD').text('@Localizer["Arabic"]');
                        }

                        $("#" + id + ' .NameTD').text(name);

                        $("#" + id + " .RowMessage").hide();
                        $("#" + id + ' .save').hide();
                        $("#" + id + ' .cancel').hide();
                        $("#" + id + ' .delete').show();
                        $("#" + id + ' .edit').show();
                        $("#" + id + ' #Language').hide();
                        $("#" + id + ' .LanguageTD').show();
                        $("#" + id + " .Name").hide();
                        $("#" + id + ' .NameTD').show();
                        $("#" + id + " .Value").hide();
                        $("#" + id + ' .ValueTD').show();
                        $("#" + id + " #TypeCode").hide();
                        $("#" + id + ' .TypeTD').show();
                        $("#" + id + " #SuperAdminId").hide();
                        $("#" + id + ' .SuperAdmin').show();
                    }
                ).fail(function(data) {
                    HideSpinner();
                    toastr.error(editMassegeError);
                });

            } else {
                $("#" + id + " .RowMessage").show();
            }
        }

        function CancelEdit(id) {
            $(".TimeZone").remove();
            $("#" + id + " .RowMessage").hide();
            $("#" + id + ' .save').hide();
            $("#" + id + ' .cancel').hide();
            $("#" + id + ' .delete').show();
            $("#" + id + ' .edit').show();
            $("#" + id + ' #Language').hide();
            $("#" + id + ' .LanguageTD').show();

            $("#" + id + " .Name").hide();
            $("#" + id + ' .NameTD').show();
            $("#" + id + " .Value").hide();
            $("#" + id + ' .ValueTD').show();
            $("#" + id + " #TypeCode").hide();
            $("#" + id + ' .TypeTD').show();
            $("#" + id + " #SuperAdminId").show();
            $("#" + id + ' .SuperAdmin').hide();
        }

        function GetSettingByLanguage(id) {
            var langId = $("#" + id + ' #Language').val();
            $.post("/ControlPanel/SystemSettings/GetSettingByLanguage",
                { id: id, languageId: langId },
                function(data) {
                    $("#" + id + ' .Name').val(data.name);
                    if (data.value == "off") {
                        $("#" + id + ' .Value').prop("checked", false);
                        $("#" + id + ' .Value').val("off");
                    } else if (data.value == "on") {
                        $("#" + id + ' .Value').prop("checked", true);
                        $("#" + id + ' .Value').val("on");
                    } else {
                        $("#" + id + ' .Value').val(data.value);
                    }
                }
            ).fail(function(data) {
                toastr.error(editMassegeError);
            });
        }

        function ChangeValue(id) {
            var type = $("#" + id + " #TypeCode").val();
            if (type == "checkbox") {
                var ch = $("#" + id + " .Value");
                if (ch.val() == "on") {
                    $("#" + id + " .Value").val("off");
                    $("#" + id + " .ValueTD i").removeClass("fa fa-check");
                    $("#" + id + " .ValueTD i").addClass("fa fa-times");
                } else {
                    $("#" + id + " .Value").val("on");
                    $("#" + id + " .ValueTD i").removeClass("fa fa-times");
                    $("#" + id + " .ValueTD i").addClass("fa fa-check");
                }
            }
        }

        function Delete(id) {

            $("#delete_item_id").val(id);
            $('#delete_confirmation_modal').modal('show');
        }
        function myfun() {
            toastr.success(deleteMassege);

        }

        function setSelectValueTimeZone(TimeZoneId,val){
            $("#" + TimeZoneId + " .Value").val(val);
             $('#ShowTimeZone').modal("hide");
        }
    function ShowTimeZone(id) {
    ShowSpinner();
    $.ajax({
        type: "GET",
        data: { id : id},
        url: "/ControlPanel/SystemSettings/ShowTimeZone/",
        success: function (data) {
            HideSpinner();
            $('#ShowTimeZone .modal-content').html(data);
            $('#ShowTimeZone').modal("show");
        }

    });
}
    </script>
    <script>
        var editMassege = '@Localizer["Edited successfully"]';
        var addMassege = '@Localizer["Added successfully"]';
        var deleteMassege = '@Localizer["Deleted successfully"]';
        var deleteMassegeError = '@Localizer["An error occurred while  deleting"]';
        var addMassegeError = '@Localizer[" An error occurred while adding"]';
        var editMassegeError = '@Localizer["An error occurred while editing"]';
        $('.tms-management').addClass("active");
        $('.tms-sub-settings').addClass("active");
        $('.tms-sub-top-nav  .tms_sub_management').addClass("active");

        $(".TimeZone")
    </script>
}
<style type="text/css">
    .PreventClick{
    pointer-events:none;
    background-color: #f3f3f3;
    }
</style>