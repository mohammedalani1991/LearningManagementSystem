@using LearningManagementSystem.Core.SystemEnums
@using LearningManagementSystem.Services.Helpers
@using X.PagedList.Web.Common
@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<DataEntity.Models.EfModels.EnrollCourseExam>
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@using Microsoft.AspNetCore.Antiforgery
@inject IAntiforgery Antiforgery
@{
    var paginations = LookupHelper.GetLookupDetailsByMasterCode(GeneralEnums.MasterLookupCodeEnums.Pagination.ToString(), ViewBag.LangId);
    var paginationValue = ViewBag.PaginationValue;
    var tokenSet = Antiforgery.GetAndStoreTokens(Context);
    var MainUrl = Url.Action("GetData", new { page = ViewBag.page, CourseId = ViewBag.CourseId });
}
<div class="col-md-12 col-sm-12 col-xs-12 tms-page">
    <input type="hidden" id="EnrollCourseExamCurrentUrl" value="@MainUrl" />
    <div class="x_panel bg-transparent">
        <div class="tms-page-title d-flex">
            <div class="tms-title">
                <h4><small>@Localizer["Course Exams & Quizzes"]</small></h4>
            </div>
            <div class="tms-action d-flex justify-content-end">
                <div class="col-md-7 col-sm-12 col-xs-12">
                    <form data-ajax="true" method="get" action="/ControlPanel/EnrollmentExams/GetData" id="Form1" data-ajax-success="GetExamsData" data-ajax-begin="ShowSpinner" data-ajax-complete="HideSpinner">
                        @Html.Hidden("table")
                        @Html.Hidden("pagination")
                        @Html.Hidden("Page")
                        <div class="float-start">
                            <p> @Localizer["The exam time will be in the time zone :"] (@ViewBag.TimeZone)  </p>
                        </div>

                        @if (AuthenticationHelper.CheckAuthentication("EnrollCourseExam", "Create", User.Identity.Name))
                        {
                            <button class="tms-save-btn float-end" type="button" onclick="ShowAddEnrollCourseExam(@ViewBag.CourseId, @ViewBag.LangId)"><img src="~/img/add-to-list.png" /> @Localizer["Add New Course Exam or Quiz"]</button>
                        }

                    </form>
                </div>
            </div>
        </div>
        <div class="x_content">
            <div class="table-responsive">
                <table class="tms-table">
                    <thead>
                        <tr class="tms-headings">
                            <th>
                                @Localizer["Name"]
                            </th>
                            <th>
                                @Localizer["Type"]
                            </th>
                            <th>
                                @Localizer["Publish Date"]
                            </th>
                            <th>
                                @Localizer["Publish End Date"]
                            </th>
                            <th>
                                @Localizer["Mark"]
                            </th>
                            <th>
                                @Localizer["Duration"]
                            </th>
                            <th>
                                @Localizer["Is Prerequisite"]
                            </th>
                            <th>
                                @Localizer["Solved Exams and Quizzes"]
                            </th>
                            <th>
                                @Localizer["Created On"]
                            </th>
                            <th>
                                @Localizer["Choose a process"]
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Count == 0)
                        {
                            <tr class="tms-tr">
                                <td colspan="10">@Localizer["No data available in the table"] </td>
                            </tr>
                        }
                        @foreach (var item in Model)
                        {
                            var ExamFinalMark = ((item.ExamFinalMark.HasValue) ? item.ExamFinalMark.Value : 0);
                            var PublishDate = LookupHelper.ConvertTimeToSystemTimeZone(item.PublishDate);
                            var PublishEndDate = LookupHelper.ConvertTimeToSystemTimeZone(item.PublishEndDate);

                            <tr class="tms-tr">
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @LookupHelper.GetTestTypeById(item.TestTypeId.Value ,(int)ViewBag.LangId)?.Name
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem =>PublishDate)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => PublishEndDate)
                                </td>
                                <td>

                                    @Html.DisplayFor(modelItem => ExamFinalMark)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Duration)
                                </td>
                                <td>
                                    @if (item.IsPrerequisite == true)
                                    {
                                        <span class="fa fa-check"></span>
                                    }
                                    else
                                    {
                                        <span class="fa fa-times"></span>
                                    }
                                </td>
                                <td>
                                    @item.EnrollStudentExams.Count()

                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CreatedOn)
                                </td>
                                <td>
                                    <div class="nav-item dropdown open tms-choose-op mx-auto">
                                        <a href="javascript:;" class="user-profile dropdown-toggle" aria-haspopup="true" data-toggle="dropdown" aria-expanded="false">
                                            @Localizer["Choose a process"]
                                        </a>
                                        <div class="dropdown-menu tms-dropdown-menu" aria-labelledby="navbarDropdown">
                                            @if (AuthenticationHelper.CheckAuthentication("EnrollCourseExam", "Edit", User.Identity.Name))
                                            {
                                                <button onclick="ShowEditCourseExam(@item.Id, @ViewBag.LangId)" type="button" class="tms-dropdown-menu-item tms-first-drop-item">@Localizer["Edit"]</button>
                                            }
                                            @if (AuthenticationHelper.CheckAuthentication("EnrollCourseExam", "View", User.Identity.Name))
                                            {
                                                <button onclick="ShowDetailsEnrollCourseExam(@item.Id, @ViewBag.LangId)" type="button" class="tms-dropdown-menu-item tms-first-drop-item">@Localizer["Details"]</button>
                                            }

                                            @if (AuthenticationHelper.CheckAuthentication("EnrollCourseExam", "Delete", User.Identity.Name))
                                            {
                                                <button onclick="ShowDeleteEnrollCourseExam(@item.Id, @ViewBag.LangId)" type="button" class="tms-dropdown-menu-item tms-first-drop-item">@Localizer["Delete"]</button>
                                            }
                                            @if (AuthenticationHelper.CheckAuthentication("EnrollCourseExam", "View", User.Identity.Name))
                                            {
                                                <button onclick="ShowExamQuestions(@item.Id, @ViewBag.LangId)" type="button" class="tms-dropdown-menu-item tms-first-drop-item">@Localizer["Manage Questions"]</button>
                                            }
                                            @if (AuthenticationHelper.CheckAuthentication("EnrollCourseExam", "Edit", User.Identity.Name))
                                            {
                                                <button onclick="ShowSubmittedExams(@item.Id, @ViewBag.LangId)" type="button" class="tms-dropdown-menu-item tms-first-drop-item">@Localizer["Solved Exams and Quizzes"]</button>
                                            }
                                            @if (AuthenticationHelper.CheckAuthentication("EnrollCourseExam", "Edit", User.Identity.Name) && item.ExamTemplateId > 0)
                                            {
                                                <button onclick="ShowRegenerateExamQuestions(@item.Id, @ViewBag.LangId)" type="button" class="tms-dropdown-menu-item tms-first-drop-item">@Localizer["Regenerate Exam Questions"]</button>
                                            }
                                            @if (AuthenticationHelper.CheckAuthentication("EnrollCourseExam", "MarkAdoption", User.Identity.Name))
                                            {
                                                if (item.MarkAdoption != true)
                                                {
                                                    <button onclick="MarkExamAdoption(@item.Id, true)" type="button" class="tms-dropdown-menu-item tms-first-drop-item">@Localizer["Mark Adoption"]</button>
                                                }
                                                else
                                                {
                                                    <button onclick="MarkExamAdoption(@item.Id, false)" type="button" class="tms-dropdown-menu-item tms-first-drop-item">@Localizer["Cancel Mark Adoption"]</button>
                                                }
                                            }
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        @if (Model.PageCount > 0)
        {
            <div class="paging-div">
                @Html.PagedListPager(Model, page => Url.Action("GetData", new { page, CourseId = ViewBag.CourseId}), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "GetData" }))
                <div class="d-flex justify-content-center">@Localizer["Page"] <p class="text-danger px-1">@(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)</p>@Localizer["from"] <p class="text-primary px-1">@Model.PageCount</p> @Localizer["Item No:"]  <p class="text-primary px-1">@Model.TotalItemCount</p> </div>
            </div>
        }
    </div>
</div>


<style>
    @@media (min-width: 1200px) {
        .modal-xl {
            --bs-modal-width: 1140px !important;
        }
    }

    .custmSelect {
        display: inline-block !important;
        width: 290px !important;
        padding-top: 2px;
    }

    .CustmModle {
        opacity: 0.0;
        z-index: -100000;
    }

    .table-responsive {
        overflow: inherit !important;
    }
</style>

<script type="text/javascript">
    $("#BankExamQuestionsGetData").on('hide.bs.modal', function () {
        $('#ShowExamQuestions').removeClass("CustmModle");
        var ViewModleEnrollCourseExamId = $("#ViewModleEnrollCourseExamId").val();
        var ViewModleLangId = $("#ViewModleLangId").val();
        setTimeout(function () {
            $('#BankExamQuestionsGetDataDiv').empty();
        }, 300);
        ShowExamQuestions(ViewModleEnrollCourseExamId, ViewModleLangId);
    });
</script>

