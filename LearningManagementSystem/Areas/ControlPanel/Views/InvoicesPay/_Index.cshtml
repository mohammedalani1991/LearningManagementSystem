@using LearningManagementSystem.Services.Helpers
@using System.Web
@using X.PagedList.Web.Common
@using X.PagedList.Mvc.Core

@using LearningManagementSystem.Core.SystemEnums;
@model X.PagedList.IPagedList<DataEntity.Models.EfModels.InvoicesPay>
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    var MainUrl = Url.Action("GetData", new { page = ViewBag.page, ProcessStatusID = ViewBag.ProcessStatusID, CourseId = ViewBag.CourseId, hdCourseName = ViewBag.hdCourseName });
}

<div class="col-md-12 col-sm-12 col-xs-12">
    <input type="hidden" id="InvoicesPayCurrentUrl" value="@MainUrl" />
    <div class="x_panel bg-transparent">
        <div class="tms-page-title d-flex">
            <div class="tms-title">
                <h4><small>@Localizer["Invoices Pay"]</small></h4>
            </div>
            <div class="tms-action d-flex justify-content-end">
                <div class="col-md-7 col-sm-12 col-xs-12">
                    <form data-ajax="true" method="get" action="InvoicesPay/GetData" id="Form1" data-ajax-success="GetData" data-ajax-begin="ShowSpinner" data-ajax-complete="HideSpinner">

                        <div class="d-flex justify-content-end">
                            @Html.Hidden("table")
                            @Html.Hidden("pagination")
                            @Html.Hidden("Page")
                            <div class="col-md-5 col-sm-3 col-xs-12 SearchCourseNameDropDownList" CourseSearchURL="/ControlPanel/InvoicesPay/CourseSearch/">
                                @Html.Hidden("hdCourseName")
                                @{
                                    var SelectListItemVer = Enumerable.Empty<SelectListItem>();
                                    if (ViewBag.CourseId != 0)
                                    {
                                        SelectListItemVer = new List<SelectListItem> { new SelectListItem { Text = ViewBag.hdCourseName, Value = ViewBag.CourseId.ToString() } };
                                    }
                                }
                                @Html.DropDownList("CourseId",SelectListItemVer,  Localizer["Search In Courses"].Value, new { @class = "form-control chosen-select tms-ddl" })
                            </div>
                            <div class="col-md-5 col-sm-3 col-xs-12">
                                @Html.DropDownList("ProcessStatusID",new SelectList(LookupHelper.GetinvoicPayStatus(ViewBag.languageId), "Id", "Name") , Localizer["Select Status"].Value, new { @class = " form-control chosen-select tms-ddl" })

                            </div>
                            <div class="col-md-6 col-sm-3 col-xs-12">
                                @Html.TextBox("searchText", null, new { @class = "form-control search-control tms-search-input", placeholder = Localizer["Search For ..."].Value })
                            </div>
                            <div>
                                <input class="btn btn-primary" onclick="BtnSearchRestPageNumber()" type="submit" value=@Localizer["Search"] />
                            </div>
                        </div>
                    </form>

                </div>
            </div>

        </div>
        <div class="x_content">
            <div class="table-responsive">
                <table class="tms-table">
                    <thead>
                        <tr class="tms-headings">
                            <th>
                                @Localizer["Contact Name"]
                            </th>
                            <th>
                                @Localizer["Course Name"]
                            </th>
                            <th>
                                @Localizer["Teacher Name"]
                            </th>
                            <th>
                                @Localizer["Section Name"]
                            </th>
                            <th>
                                @Localizer["Receipt No"]
                            </th>
                            <th>
                                @Localizer["Notes"]
                            </th>
                            <th>
                                @Localizer["Currency Rate"]
                            </th>
                            <th>
                                @Localizer["Currency Code"]
                            </th>
                            <th>
                                @Localizer["Status"]
                            </th>
                            <th>
                                @Localizer["Attachment Url"]
                            </th>
                            <th>
                                @Localizer["Created On"]
                            </th>
                            <th>

                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Count == 0)
                        {
                            <tr class="tms-tr">
                                <td colspan="8">@Localizer["No data available in the table"] </td>
                            </tr>
                        }
                        @foreach (var item in Model)
                        {
                            <tr class="tms-tr">
                                <td>
                                    @Html.DisplayFor(modelItem => item.Contact.FullName)
                                </td>
                                <td>
                                    <a href="@Url.Action("EditPage", "EnrollmentCourse", new {Area = "ControlPanel" , id = item.EnrollTeacherCourseId})">
                                        @item.EnrollTeacherCourse?.CourseName
                                    </a>
                                </td>
                                <td>
                                    @item.EnrollTeacherCourse?.Teacher?.Contact?.FullName
                                </td>
                                <td>
                                    @item.EnrollTeacherCourse?.SectionName
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ReceiptNo)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Notes)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CurrencyRate)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CustomerCurrencyCode)
                                </td>
                                <td>
                                    @LookupHelper.GetInvoicesPayStatusById(item.ProcessStatus,ViewBag.languageId)?.Name
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(item.AttachmentUrl) && item.AttachmentUrl != "Free Course")
                                    {
                                        if (LookupHelper.GetFileType(System.IO.Path.GetExtension(item.AttachmentUrl)) == (int)GeneralEnums.ResourceTypeEnum.Image)
                                        {
                                            <a href="javascript:;" class="tms-imageview-btn" onclick="ShowImageView('@item.AttachmentUrl','')" aria-haspopup="true" id="ImageViewer" data-toggle="dropdown" aria-expanded="false">
                                                <img src="/img/search.png">
                                            </a>
                                        }
                                        else if (LookupHelper.GetFileType(System.IO.Path.GetExtension(item.AttachmentUrl)) == (int)GeneralEnums.ResourceTypeEnum.Pdf)
                                        {
                                            <a onclick="OpenPdf('@item.AttachmentUrl')" class="btn btn-sm btn-primary text-white mb-0" style="border-radius:10px">
                                                <img src="/img/search.png">
                                            </a>
                                        }
                                        else
                                        {
                                            <a href="/ControlPanel/InvoicesPay/DownloadDocument?filePath=@HttpUtility.UrlEncode(item.AttachmentUrl)">
                                                <img src="/img/download.png">
                                            </a>
                                        }
                                    }
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CreatedOn)
                                </td>

                                <td style="width: 25%;">
                                    @if (item.ProcessStatus == (int)GeneralEnums.InvoicesPayStatusEnum.Pending)
                                    {
                                        <div class="nav-item dropdown open tms-choose-op mx-auto">
                                            <a href="javascript:;" class="user-profile dropdown-toggle" aria-haspopup="true" data-toggle="dropdown" aria-expanded="false">
                                                @Localizer["Choose a process"]
                                            </a>
                                            <div class="dropdown-menu tms-dropdown-menu" aria-labelledby="navbarDropdown">

                                                @if (AuthenticationHelper.CheckAuthentication("InvoicesPay", "ChangeInvoicesPayStatus", User.Identity.Name))
                                                {
                                                    <button onClick="ShowChangeInvoicesPayStatus(@item.Id)" type="button" class="tms-dropdown-menu-item tms-first-drop-item">@Localizer["Change Status"]</button>

                                                }
                                            </div>
                                        </div>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                @if (Model.PageCount > 0)
                {
                    <div class="paging-div">
                        @Html.PagedListPager(Model, page => Url.Action("GetData", new { page, ProcessStatusID = ViewBag.ProcessStatusID ,CourseId = ViewBag.CourseId,hdCourseName=ViewBag.hdCourseName }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "main" }))
                        <div class="d-flex justify-content-center">@Localizer["Page"] <p class="text-danger px-1">@(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)</p>@Localizer["from"] <p class="text-primary px-1">@Model.PageCount</p> @Localizer["Item No:"]  <p class="text-primary px-1">@Model.TotalItemCount</p> </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
