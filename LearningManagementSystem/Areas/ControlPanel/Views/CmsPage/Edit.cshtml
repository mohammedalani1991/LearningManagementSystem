@using LearningManagementSystem.Core.SystemEnums
@using LearningManagementSystem.Services.Helpers
@using DataEntity.Models.EfModels;
@model DataEntity.Models.ViewModels.CmsPageViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@using Microsoft.AspNetCore.Antiforgery
@inject IAntiforgery Antiforgery
@{
    var lookupName = new HashSet<string>() { GeneralEnums.MasterLookupCodeEnums.Languages.ToString() };
    var lookups = LookupHelper.GetLookupDetailsByMasterCode(lookupName, Model.LanguageId);

    ViewData["Title"] = @Localizer["Edit Page"];
    var languages = lookups[GeneralEnums.MasterLookupCodeEnums.Languages.ToString()];
    var ListCmsCaterys = Model.ListCmsCaterys;
    ListCmsCaterys.Add(new CmsCatery { Name = Localizer["Select"].Value, Id = 0 });
    int image = (int)GeneralEnums.FileEnum.Image;
    var tokenSet = Antiforgery.GetAndStoreTokens(Context);
    var statuses = LookupHelper.GetStatuses(Model.LanguageId);

}

<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="d-flex tms-page-popup-title">
                <div data-dismiss="modal" class="tms-close-div">
                    <i class="fa fa-close"></i>
                </div>
                <div class="tms-table-popup-title" style="width:97%;">
                    @Localizer["Edit Page"]
                </div>
            </div>
            <div class="x_content">
                <br />
                <form action="/ControlPanel/CmsPage/Edit" method="post" id="CmsPage-Edit" class="form-horizontal form-label-left">
                    <div class="row">
                        @Html.HiddenFor(r => r.Id)
                        @Html.HiddenFor(r => r.Page)
                        <input type="hidden" value="@Model.Id" name="CmsPageId" id="CmsPageId" />
                        <div class="form-group col-lg-4 col-sm-12 col-xs-12">
                            <label class="control-label col-md-12 col-sm-3 col-xs-12 tms-label" for="LanguageId">
                                @Localizer["Language"]<span class="required">*</span>
                            </label>
                            <div class="col-md-12 col-sm-6 col-xs-12">
                                @Html.DropDownList("LanguageId", new SelectList(languages, "Id", "Name", Model.LanguageId), new { @class = "form-control chosen-select tms-ddl", required = "required", onchange = "onDdlChanged(this)" })
                                @Html.ValidationMessageFor(model => model.LanguageId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-lg-4 col-sm-12 col-xs-12">
                            <label class=" control-label col-md-12 col-sm-3 col-xs-12 tms-label" for="Name">
                                @Localizer["Name"]<span class="required">*</span>
                            </label>
                            <div class="col-md-12 col-sm-6 col-xs-12">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { required = "required", @class = "form-control tms-input col-md-7 col-xs-12" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-lg-4 col-sm-12 col-xs-12">
                            <label class=" control-label col-md-12 col-sm-3 col-xs-12 tms-label" for="ImageUrl">
                                @Localizer["Image Url"]
                            </label>
                            <div class="col-md-12 col-sm-6 col-xs-12">
                                <label class="custom-file-upload">
                                    <input type="file" accept="image/*" onchange="UploadProfilePhoto(event)" />
                                    <i class="fa fa-upload px-2 pt-1"></i> @Localizer["Upload"]
                                </label>
                                @Html.HiddenFor(r => r.ImageUrl)
                            </div>
                        </div>
                        <div class="form-group col-lg-4 col-sm-12 col-xs-12">
                            <label class=" control-label col-md-12 col-sm-3 col-xs-12 tms-label" for="CateryId">
                                @Localizer["Category"]
                            </label>
                            <div class="col-md-12 col-sm-6 col-xs-12">
                                @Html.DropDownListFor(model => model.CateryId, new SelectList(ListCmsCaterys.OrderBy(d => d.Id).ToList(), "Id", "Name"), new { @class = "form-control chosen-select tms-ddl" })
                            </div>
                        </div>
                        @*<div class="form-group col-lg-2 col-sm-12 col-xs-12">
                                <label class="control-label col-md-12 col-sm-3 col-xs-12 tms-label" for="AllowComment">
                                    @Localizer["Allow Comment"]
                                </label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.CheckBoxFor(model => model.AllowComment, new { @class = "form-control tms-input col-md-5 col-sm-3 col-xs-12" })
                                </div>
                            </div>
                            <div class="form-group col-lg-2 col-sm-12 col-xs-12">
                                <label class="control-label col-md-12 col-sm-3 col-xs-12 tms-label" for="IsFeatured">
                                    @Localizer["Is Featured"]
                                </label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.CheckBoxFor(model => model.IsFeatured, new { @class = "form-control tms-input col-md-5 col-sm-3 col-xs-12" })
                                </div>
                            </div>*@
                        <div class="form-group col-lg-2 col-sm-12 col-xs-12">
                            <label class="control-label col-md-12 col-sm-3 col-xs-12 tms-label" for="ShowInHomePage">
                                @Localizer["Show In Home"]
                            </label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                @Html.CheckBoxFor(model => model.ShowInHomePage, new { @class = "form-control tms-input col-md-5 col-sm-3 col-xs-12" })
                            </div>
                        </div>
                        <div class="form-group col-lg-4 col-sm-12 col-xs-12">
                            <label class="control-label col-md-12 col-sm-3 col-xs-12 tms-label" for="SortOrder">
                                @Localizer["Sort Order"]
                            </label>
                            <div class="col-md-12 col-sm-6 col-xs-12">
                                @Html.EditorFor(model => model.SortOrder, new { htmlAttributes = new { @class = "form-control tms-input col-md-7 col-xs-12",min=1 } })
                            </div>
                        </div>
                        <div class="form-group col-lg-4 col-sm-12 col-xs-12">
                            <label class=" control-label col-md-12 col-sm-3 col-xs-12 tms-label" for="PublishDate">
                                @Localizer["Publish Date"]
                            </label>
                            <div class="col-md-12 col-sm-6 col-xs-12">
                                @Html.EditorFor(model => model.PublishDate, new { htmlAttributes = new { @class = "form-control tms-input col-md-7 col-xs-12" } })
                            </div>
                        </div>
                        <div class="form-group col-lg-4 col-sm-12 col-xs-12">
                            <label class=" control-label col-md-12 col-sm-3 col-xs-12 tms-label" for="EndDate">
                                @Localizer["End Date"]
                            </label>
                            <div class="col-md-12 col-sm-6 col-xs-12">
                                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control tms-input col-md-7 col-xs-12" } })
                            </div>
                        </div>
                          <div class="col-lg-4 col-sm-12 col-xs-12 form-group">
                            <label class="col-xs-6 control-label tms-label" for="Status">
                                @Localizer["Status"] <span class="required">*</span>
                            </label>
                            <div class="col-lg-12">
                                @Html.DropDownList("Status", new SelectList(statuses, "Id", "Name"), Localizer["Select"].Value, new { @class = "form-control chosen-select tms-ddl", required = "required" })
                            </div>
                        </div>
                        <div class="form-group col-lg-12 col-sm-12 col-xs-12">
                            <label class=" control-label col-md-12 col-sm-3 col-xs-12 tms-label" for="ShortDescription">
                                @Localizer["Short Description"]
                            </label>
                            <div class="col-md-12 col-sm-6 col-xs-12">
                                @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control tms-input col-md-7 col-xs-12" } })
                            </div>
                        </div>
                        <div class="form-group col-lg-12 col-sm-12 col-xs-12">
                            <label class="control-label col-md-12 col-sm-3 col-xs-12 tms-label" for="Description">
                                @Localizer["Description"]<span class="required">*</span>
                            </label>
                            <div class="col-md-12 col-sm-6 col-xs-12">
                                @Html.TextAreaFor(model => model.Description, new { @class = "tinyRichText" })
                                <label id="Description-error" class="error" style="display:none" for="Description">@Localizer["This field is required."] </label>
                            </div>
                        </div>
                        <div class="form-group col-lg-12 col-sm-12 col-xs-12">
                            <label class=" control-label col-md-12 col-sm-3 col-xs-12 tms-label" for="Keyword">
                                @Localizer["Keywords"]
                            </label>
                            <div class="col-md-12 col-sm-6 col-xs-12">
                                @Html.EditorFor(model => model.Keyword, new { htmlAttributes = new { @class = "form-control tms-input col-md-7 col-xs-12 tagsinput" } })
                                @Html.ValidationMessageFor(model => model.Keyword, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="text-center">
                        <button class="tms-save-btn" type="submit"><i class="fa fa-save"></i> @Localizer["Saving Changes"]</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<script>

    $(document).ready(function () {
        tinymce.get("Description").setContent('@Model.Description');
        $('.tagsinput').tagsinput();
    });

    InitTinymce();

    $("#CmsPage-Edit").on("keydown", ".bootstrap-tagsinput input", function (event) {
        if (event.which == 13) {
            $(this).blur();
            $(this).focus();
            return false;
        }
    });
     function UploadProfilePhoto(e) {
        var files = e.target.files;
        if (files.length > 0) {
            if (window.FormData !== undefined) {
                var formData = new FormData();
                formData.append("fileType", @image);
                for (var i = 0; i != files.length; i++) {
                    formData.append("files", files[i]);
                }
                 $.ajax({
                    type: "POST",
                    url: "@Url.Action("UploadFiles", "Files", new {Area = "ControlPanel"})",
                    data: formData,
                    contentType: false,
                    processData: false,
                    headers: {
                    '@tokenSet.HeaderName' : '@tokenSet.RequestToken'
                    },
                     success: function (result) {
                         console.log(result);
                         $("#ImageUrl").val(result[0]);
                    },
                     error: function (req, status, error) {
                        alert("Error while adding the Image");
                    }
                 });
            } else {
                 alert("This browser doesn't support HTML5 file uploads!");
            }
        }
    }
</script>
<script src="~/js/CmsPage/CmsPage.js?ver=2.1"></script>
<style>
    .bootstrap-tagsinput {
        display: block !important;
    }
</style>