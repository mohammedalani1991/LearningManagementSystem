@using LearningManagementSystem.Core.SystemEnums
@using LearningManagementSystem.Services.Helpers
@using LearningManagementSystem.Core
@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<DataEntity.Models.EfModels.CommunicationChannel>
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@{
    var lookupName = new HashSet<string>() { GeneralEnums.MasterLookupCodeEnums.Languages.ToString(), GeneralEnums.MasterLookupCodeEnums.Pagination.ToString() };
    var lookups = LookupHelper.GetLookupDetailsByMasterCode(lookupName, ViewBag.LangId);


    var paginations = LookupHelper.GetLookupDetailsByMasterCode(GeneralEnums.MasterLookupCodeEnums.Pagination.ToString(), ViewBag.LangId);
    var paginationValue = ViewBag.PaginationValue;
    var languages = lookups[GeneralEnums.MasterLookupCodeEnums.Languages.ToString()];
    var statuses = LookupHelper.GetStatuses();
}


<div class="col-md-12 col-sm-12 col-xs-12 tms-page">
    <div class="x_panel bg-transparent">
        <div class="tms-page-title d-flex">
            <div class="tms-title">
                <h4><small>@Localizer["Communication Channel"]</small></h4>
            </div>
            <div class="tms-action d-flex justify-content-end">
                <div class="col-md-7 col-sm-12 col-xs-12">
                    @using (Html.BeginForm("Index", "CommunicationChannels", FormMethod.Get, new { id = "Form1" }))
                    {
                        <div class="d-flex justify-content-end">
                            @Html.Hidden("resetTo", 1)
                            @Html.Hidden("pagination")
                            <div class="col-md-6 col-sm-3 col-xs-12">
                                @Html.TextBox("searchText", null, new { @class = "form-control search-control tms-search-input", placeholder = Localizer["Search For ..."].Value })
                            </div>

                            <div>
                                <input class="btn btn-primary" type="submit" value=@Localizer["Search"] />
                            </div>
                        </div>
                    }
                </div>
                @if (AuthenticationHelper.CheckAuthentication("Lookups", "Create", User.Identity.Name))
                {
                    <div>
                        <button class="tms-btn" type="button" onclick="ShowAddRow()"><img src="~/img/add-to-list.png" /> @Localizer["Add New"]</button>
                    </div>

                }
            </div>
        </div>
        <div class="x_content">
            <div class="table-responsive">
                <table class="tms-table">
                    <thead>
                        <tr class="tms-headings">
                            <th>
                                @Localizer["Language"]
                            </th>
                            <th>
                                @Localizer["Name"]
                            </th>
                            <th>
                                @Localizer["Note"]
                            </th>
                            <th>
                                @Localizer["Status"]
                            </th>
                            <th>
                                @if (AuthenticationHelper.CheckAuthentication("Lookups", "Create", User.Identity.Name))
                                {
                                    @Html.DropDownList("pagin", new SelectList(paginations, "Code", "Name", paginationValue), null, new { @class = "mx-3 p-1 rounded", style = "max-height: 26px;min-width: 49px;", required = "required", @onchange = "ChangePagenation()" })
                                }
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr class="tms-tr" id="AddRow" style="display:none">
                            <td>
                                @Html.DropDownList("LanguageId", new SelectList(languages, "Id", "Name", ViewBag.LangId), new { @class = "select-text col-10", required = "required" })
                                <span class="select-bar col-10 m-auto" />
                                <span class="Message" style="color:red;font-weight:bold;display:none;">@Localizer["All Fileds Reqiered"]</span>
                            </td>
                            <td class="col-2">
                                <input type="text" id="Name" name="Name" class="form__field col-10" required />
                            </td>
                            <td>
                                <textarea id="Note" name="Note" class="form__field p-2 col-10" style="height: 39px; min-height: 39px !important;"></textarea>
                            </td>
                            <td>
                                @Html.DropDownList("Status", new SelectList(statuses, "Id", "Name"), new { @class = "select-text col-10", required = "required" })
                                <span class="select-bar col-10 m-auto" />
                            </td>
                            <td style="width:25%">
                                <div class="nav-item dropdown open tms-choose-op mx-auto">
                                    <a href="javascript:;" class="user-profile dropdown-toggle" aria-haspopup="true" data-toggle="dropdown" aria-expanded="false">
                                        @Localizer["Choose a process"]
                                    </a>
                                    <div class="dropdown-menu tms-dropdown-menu" aria-labelledby="navbarDropdown">

                                        @if (AuthenticationHelper.CheckAuthentication("Lookups", "Create", User.Identity.Name))
                                        {
                                            <button onClick="AddCommunicationChannel(event)" type="button" class="tms-dropdown-menu-item tms-first-drop-item">@Localizer["Add"]</button>
                                            <button onClick="HideAddRow(event)" type="button" class="tms-dropdown-menu-item">@Localizer["Cancel"]</button>
                                        }
                                    </div>
                                </div>
                            </td>
                        </tr>
                        @foreach (var item in Model)
                        {
                            <tr class="tms-tr" id="@item.Id">
                                <td>
                                    @if (ViewBag.LangId == (int)GeneralEnums.LanguageEnum.English)
                                    {
                                        <span class="LanguageTD">@Localizer["English"]</span>
                                    }
                                    else
                                    {
                                        <span class="LanguageTD">@Localizer["Arabic"]</span>
                                    }
                                    @Html.DropDownList("Language", new SelectList(languages, "Id", "Name", ViewBag.LangId), new { @class = "select-text col-10", required = "required", onchange = "GetCommunicationChannelByLanguage(" + item.Id + ")", style = "display:none;min-width: 110px;" })
                                    <span class="select-bar col-10 m-auto" />
                                    <span class="RowMessage" style="color:red;font-weight:bold;display:none;">@Localizer["All Fileds Reqiered"]</span>
                                </td>
                                <td class="col-2">
                                    <span class="NameTD">@item.Name</span>
                                    <input type="text" class="Name form__field col-10" style="display:none;" name="Name" value="@item.Name" />
                                </td>
                                <td>
                                    <span class="NoteTD">@item.Note</span>
                                    <textarea class="Note form__field p-2 col-10" style="display: none; height: 39px; min-height: 39px !important;" name="Note">@item.Note</textarea>
                                </td>

                                <td>
                                    <span class="StatusTD">
                                        @LookupHelper.GetStatusById(item.Status)?.Name
                                    </span>
                                    @Html.DropDownList("StatusCode", new SelectList(statuses, "Id", "Name", item.Status), string.Empty, new { @class = "select-text col-10", style = "display:none;min-width: 110px;" })
                                    <span class="select-bar col-10 m-auto" />
                                </td>
                                <td style="width: 25%;">
                                    <div class="nav-item dropdown open tms-choose-op mx-auto">
                                        <a href="javascript:;" class="user-profile dropdown-toggle" aria-haspopup="true" data-toggle="dropdown" aria-expanded="false">
                                            @Localizer["Choose a process"]
                                        </a>
                                        <div class="dropdown-menu tms-dropdown-menu" aria-labelledby="navbarDropdown">

                                            @if (AuthenticationHelper.CheckAuthentication("Lookups", "Edit", User.Identity.Name))
                                            {
                                                <button onClick="UpdateCommunicationChannel(@item.Id)" type="button" class="tms-dropdown-menu-item tms-first-drop-item edit">@Localizer["Edit"]</button>

                                            }
                                            @if (AuthenticationHelper.CheckAuthentication("Lookups", "Edit", User.Identity.Name))
                                            {
                                                <button onClick="SaveCommunicationChannel(@item.Id)" type="button" class="tms-dropdown-menu-item tms-first-drop-item save" style="display:none">@Localizer["Edit"]</button>
                                                <button onClick="CancelEdit(@item.Id)" type="button" class="tms-dropdown-menu-item cancel" style="display:none">@Localizer["Cancel"]</button>
                                            }
                                            @if (AuthenticationHelper.CheckAuthentication("Lookups", "View", User.Identity.Name))
                                            {
                                                <button onClick="location.href = '@Url.Action("SubCommunicationChannel", new {id = item.Id, page=ViewBag.Page})'" type="button" class="tms-dropdown-menu-item subCommunicationChannel">@Localizer["Details"]</button>
                                            }
                                            @if (AuthenticationHelper.CheckAuthentication("Lookups", "Delete", User.Identity.Name))
                                            {
                                                <button onclick="Delete(@item.Id)" type="button" class="tms-dropdown-menu-item delete">@Localizer["Delete"]</button>
                                            }
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div class="modal fade" id="delete_confirmation_modal" role="dialog" style="display: none;">
                    <div class="modal-dialog" style="margin-top: 260.5px;">
                        <div class="modal-content">
                            <div class = "row">
                                <div class = "col-md-12 col-sm-12 col-xs-12">
                                    <div class = "d-flex tms-page-popup-title py-4">
                                        <div data-dismiss = "modal" class = "tms-close-div">
                                            <i class = "fa fa-close"></i>
                                        </div>
                                        <div class = "tms-table-popup-title" style = "width:97%;">
                                            @Localizer["Are you sure you want to delete this?"]
                                        </div>
                                    </div>
                                    <div class = "x_content">
                                        <br/>
                                        @using (Html.BeginForm("DeleteConfirmed", "CommunicationChannels", FormMethod.Post, new { id = "delete_data" }))
                                        {
                                            <input type = "hidden" id = "delete_item_id" name = "id" value = "">
                                            <input type = "hidden" id = "delete_page_id" name = "page" value = "@ViewBag.Page">
                                            <p class="p-3 text-center tms-delete-msg">@Localizer["You are trying to delete the information and data of this item, are you sure to delete all its details?"]</p>
                                            <div class="text-center">
                                                <button type="submit" onclick="myfun()" class="tms-save-btn" style="width: 100px;" >@Localizer["Delete"]</button>
                                                <button type="button" class="tms-cancel-btn px-10" style="width: 100px;" data-dismiss = "modal">@Localizer["Cancel"]</button>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                @if (Model.PageCount > 0)
                {
                    <div class="paging-div">
                        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchText = ViewBag.searchText }))
                        <div class="d-flex justify-content-center">@Localizer["Page"] <p class="text-danger px-1">@(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)</p>@Localizer["from"] <p class="text-primary px-1">@Model.PageCount</p> @Localizer["Item No:"]  <p class="text-primary px-1">@Model.TotalItemCount</p> </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
@section JavaScript{

    <script>
    function ChangePagenation() {
        debugger;
        var page = $("#pagination").val();
        setCookie('@Constants.Pagenation.CommunicationChannelPagination', page, 1);
        $("#Form1").submit();
    }


    function setCookie(cname, cvalue, exdays) {
        var d = new Date();
        d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));
        var expires = "expires=" + d.toUTCString();
        document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
    }


    function ShowAddRow() {
        $("#AddRow").show();
        $("#addIcon").hide();
    }

    function HideAddRow() {
        $("#AddRow").hide();
        $("#addIcon").show();
    }

    function AddCommunicationChannel(e) {
        e.preventDefault();
        var communicationChannelViewModel = {};
        var langId = $('#LanguageId').val();
        var name = $('#Name').val();
        var note = $('#Note').val();
        var status = $('#Status').val();
        debugger;
        communicationChannelViewModel.LanguageId = langId;
        communicationChannelViewModel.Name = name;
        communicationChannelViewModel.Note = note;
        communicationChannelViewModel.Status = status;

        if (langId > 0 && status > 0 && name != "") {
            ShowSpinner();
            $.post("/ControlPanel/CommunicationChannels/Create",
                { communicationChannelViewModel: communicationChannelViewModel},
                function (data) {
                HideSpinner();
                    toastr.success(addMassege);
                    setTimeout(
                        function () {
                    location.reload();
                }, 1000);
        },
            ).fail(function (data) {
                HideSpinner();
                alert("Error while Add Communication Channel");
            });
        }  else {
            $(".Message").show();
        }
    }

    function UpdateCommunicationChannel(id) {
        $("#" + id + ' .save').show();
        $("#" + id + ' .cancel').show();
        $("#" + id + ' .edit').hide();
        $("#" + id + ' .delete').hide();
        $("#" + id + ' .subCommunicationChannel').hide();

        $("#" + id + ' #Language').show();
        $("#" + id + ' .LanguageTD').hide();
        $("#" + id + " .Name").show();
        $("#" + id + ' .NameTD').hide();
        $("#" + id + " .Note").show();
        $("#" + id + ' .NoteTD').hide();
        $("#" + id + " #StatusCode").show();
        $("#" + id + ' .StatusTD').hide();
    }
    function SaveCommunicationChannel(id) {

        var communicationChannelViewModel = {};
        var langId = $("#"+id+' #Language').val();
        var name = $("#" + id +" .Name").val();
        var note = $("#" + id +" .Note").val();
        var status = $("#" + id + " #StatusCode").val();
        var statusName = $("#" + id + " #StatusCode option:selected").text();
        communicationChannelViewModel.LanguageId = langId;
        communicationChannelViewModel.Id = id;
        communicationChannelViewModel.Name = name;
        communicationChannelViewModel.Note = note;
        communicationChannelViewModel.Status = status;
        communicationChannelViewModel.Page = $("#delete_page_id").val();
        if (langId > 0 && status > 0 && name != "") {

            ShowSpinner();
            $.post("/ControlPanel/CommunicationChannels/Edit",
                { communicationChannelViewModel: communicationChannelViewModel },
                function (data) {
                HideSpinner();
                    toastr.success(editMassege);

                    $("#" + id + ' .NameTD').text(name);
                    $("#" + id + ' .NoteTD').text(note);
                    $("#" + id + ' .StatusTD').text(statusName);

                    if (langId ==@((int)GeneralEnums.LanguageEnum.English)){
                        $("#" + id + ' .LanguageTD').text('@Localizer["English"]');
                    }else{
                        $("#" + id + ' .LanguageTD').text('@Localizer["Arabic"]');
                    }

                    $("#" + id + " .RowMessage").hide();
                    $("#" + id + ' .save').hide();
                    $("#" + id + ' .cancel').hide();
                    $("#" + id + ' .edit').show();
                    $("#" + id + ' .delete').show();
                    $("#" + id + ' .subCommunicationChannel').show();
                    $("#" + id + ' #Language').hide();
                    $("#" + id + ' .LanguageTD').show();
                    $("#" + id + " .Name").hide();
                    $("#" + id + ' .NameTD').show();
                    $("#" + id + " .Note").hide();
                    $("#" + id + ' .NoteTD').show();
                    $("#" + id + " #StatusCode").hide();
                    $("#" + id + ' .StatusTD').show();
                }
            ).fail(function (data) {
                HideSpinner();
                toastr.error(editMassegeError);
            });

        } else {
            $("#" + id + " .RowMessage").show();
        }
    }

    function CancelEdit(id) {
        $("#" + id + " .RowMessage").hide();
        $("#" + id + ' .save').hide();
        $("#" + id + ' .cancel').hide();
        $("#" + id + ' .edit').show();
        $("#" + id + ' .delete').show();
        $("#" + id + ' .subCommunicationChannel').show();
        $("#" + id + ' #Language').hide();
        $("#" + id + ' .LanguageTD').show();
        $("#" + id + " .Name").hide();
        $("#" + id + ' .NameTD').show();
        $("#" + id + " .Note").hide();
        $("#" + id + ' .NoteTD').show();
        $("#" + id + " #StatusCode").hide();
        $("#" + id + ' .StatusTD').show();
    }

    function GetCommunicationChannelByLanguage(id) {
        var langId = $("#" + id + ' #Language').val();
        $.post("/ControlPanel/CommunicationChannels/GetCommunicationChannelByLanguage",
            { id: id, languageId: langId },
            function (data) {
                $("#" + id + ' .Name').val(data.name);
                $("#" + id + ' .Note').val(data.note);
            }
        ).fail(function (data) {
            toastr.error(errorMassege);
        });
    }
    function Delete(id) {
        $("#delete_item_id").val(id);
        $('#delete_confirmation_modal').modal('show');
    }
    function myfun() {
        toastr.success(deleteMassege);

    }
    </script>
    <script>


         var editMassege = '@Localizer["Edited successfully"]';
        var addMassege = '@Localizer["Added successfully"]';
        var deleteMassege = '@Localizer["Deleted successfully"]';
        var deleteMassegeError = '@Localizer["An error occurred while  deleting"]';
        var addMassegeError = '@Localizer["An error occurred while adding"]';
        var editMassegeError = '@Localizer["An error occurred while editing"]';
         var errorMassege = '@Localizer["Error while Get Setting By Language"]';


    $('.tms-management').addClass("active");
    $('.tms-sub-communication-channels').addClass("active");
    $('.tms-sub-top-nav  .tms_sub_management').addClass("active");



    </script>
}