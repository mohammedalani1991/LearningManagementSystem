@using LearningManagementSystem.Core.SystemEnums
@using LearningManagementSystem.Services.Helpers
@using X.PagedList.Web.Common
@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<DataEntity.Models.EfModels.SectionOfCourseQuiz>
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@{
    var paginations = LookupHelper.GetLookupDetailsByMasterCode(GeneralEnums.MasterLookupCodeEnums.Pagination.ToString(), ViewBag.LangId);
    var paginationValue = ViewBag.PaginationValue;
}

<div class="col-md-12 col-sm-12 col-xs-12 tms-page" id="Quizzes">
    <div class="x_panel bg-transparent">
        <div class="tms-page-title d-flex">
            <div class="tms-title">
                <h4><small>@Localizer["Daily recitation"]</small></h4>
            </div>
            <div class="tms-action d-flex justify-content-end">
                <div class="col-md-7 col-sm-12 col-xs-12">
                </div>
                @if (AuthenticationHelper.CheckAuthentication("CoursesContent", "RefetchQuiz", User.Identity.Name))
                {
                    <div>
                        <button class="tms-btn" type="button" onclick="RefetchQuizzes('@ViewBag.SectionOfCourseId')"><img src="~/img/add-to-list.png" /> @Localizer["Refetch the Daily recitation"]</button>
                    </div>
                }
            </div>
        </div>
        <div class="x_content">
            <div class="table-responsive">
                <table class="tms-table">
                    <thead>
                        <tr class="tms-headings">
                            <th class="Id">
                                @Localizer["Lecture Name"]
                            </th>
                            <th class="Id">
                                @Localizer["Lecture Description"]
                            </th>
                            <th class="CourseId">
                                @Localizer["New save"]
                            </th>
                            <th class="SectionName">
                                @Localizer["Minor Review"]
                            </th>
                            <th class="Lectures">
                                @Localizer["Grand revision"]
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Count == 0)
                        {
                            <tr class="tms-tr">
                                <td colspan="7">@Localizer["No data available in the table"] </td>
                            </tr>
                        }
                        @foreach (var item in Model)
                        {
                            <tr class="tms-tr">
                                <td>
                                    @item.Lecture.LectureName
                                </td>
                                <td>
                                    @Html.Raw(item.Lecture?.Description?.Replace("\r" , "<hr/>"))
                                </td>
                                <td>
                                    <input attr-Quiz-id="@item.Id" attr-Quiz-num="1" type="checkbox" @(item.QuestionOne.Value ? "checked" : "") />
                                </td>
                                <td>
                                    <input attr-Quiz-id="@item.Id" attr-Quiz-num="2" type="checkbox" @(item.QuestionTwo.Value ? "checked" : "") />
                                </td>
                                <td>
                                    <input attr-Quiz-id="@item.Id" attr-Quiz-num="3" type="checkbox" @(item.QuestionThree.Value ? "checked" : "") />
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                @if (Model.PageCount > 0)
                {
                    <div class="paging-div">
                        @Html.PagedListPager(Model, page => Url.Action("GetQuizzes", new { page, id = ViewBag.SectionOfCourseId }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "ShowQuizzesContentDiv" }))
                        <div class="d-flex justify-content-center">@Localizer["Page"] <p class="text-danger px-1">@(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)</p>@Localizer["from"] <p class="text-primary px-1">@Model.PageCount</p> @Localizer["Item No:"]  <p class="text-primary px-1">@Model.TotalItemCount</p> </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script>
    $("#Quizzes").off("click").on("click", "[attr-Quiz-id]", function () {
        ShowSpinner();
        var quizId = $(this).attr("attr-Quiz-id");
        var quizNum = $(this).attr("attr-Quiz-num");
        var checkedRow = $(this).is(":checked");
        var checkbox = $(this).find("[attr-Quiz-id='" + quizId + "']").prevObject;
        $.ajax({
            type: "Post",
            url: "/ControlPanel/CoursesContent/AddOrRemoveQuiz/",
            data: { quizId, quizNum, checkedRow },
            success: function (data) {
                if (data == "Ok") {
                    toastr.success(editMassege);
                    HideSpinner();
                }
                else {
                    HideSpinner();
                    toastr.error(editMassegeError);
                    if (checkbox[0].checked == true)
                        checkbox.prop("checked", false);
                    else
                        checkbox.prop("checked", true);
                }
            },
            error: function (data) {
                HideSpinner();
                toastr.error(editMassegeError);
                if (checkbox[0].checked == true)
                    checkbox.prop("checked", false);
                else
                    checkbox.prop("checked", true);
            },
        });

    });
</script>