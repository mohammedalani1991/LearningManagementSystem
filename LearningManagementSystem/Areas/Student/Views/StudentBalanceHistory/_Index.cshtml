@model X.PagedList.IPagedList<DataEntity.Models.EfModels.StudentBalanceHistory>

@using Microsoft.AspNetCore.Mvc.Localization
@using X.PagedList.Web.Common
@using X.PagedList.Mvc.Core

@using LearningManagementSystem.Services.ControlPanel
@using LearningManagementSystem.Core.SystemEnums
@using LearningManagementSystem.Services.Helpers

@inject IViewLocalizer Localizer
@inject ICurrencyService CurrencyService

@{
    var currency = CurrencyService.GetPrimaryCurrency();
    var paginations = LookupHelper.GetLookupDetailsByMasterCode(GeneralEnums.MasterLookupCodeEnums.Pagination.ToString(), ViewBag.LangId);
    var paginationValue = ViewBag.PaginationValue;
}
<style>
    .tabcontent .form-control {
        height: unset !important;
    }
</style>

<div class="row">
    <div class="col-12">
        <div class="x_panel bg-transparent">
            <div class="d-flex justify-content-center mb-3">
                <button onclick="OpenAddBalance()" class="btn btn-primary px-3 py-2">@Localizer["Add Balance"]</button>
            </div>
            <div class="table-responsive table-bordered  ">
                <table class="table text-center m-0">
                    <thead class="table-primary">
                        <tr class="tms-headings">
                            <th>
                                @Localizer["Action"]
                            </th>
                            <th>
                                @Localizer["Amount"]
                            </th>
                            <th>
                                @Localizer["Balance"]
                            </th>
                            <th>
                                @Localizer["Added On"]
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Count == 0)
                        {
                            <tr class="tms-tr">
                                <td colspan="4">@Localizer["No data available in the table"] </td>
                            </tr>
                        }
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Localizer[item.Title] @item?.EnrollStudentCourse?.Course?.CourseName
                                </td>
                                <td>
                                    @item.Amount @Html.Raw(currency.Icon)
                                </td>
                                <td>
                                    @item.Balance @Html.Raw(currency.Icon)
                                </td>
                                <td>
                                    @item.CreatedOn
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="paddtop-Page">
                @if (Model.PageCount > 0)
                {
                    <div class="paging-div">
                        @Html.PagedListPager(Model, page => Url.Action("GetData", new {page}), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "MyBalance" }))
                        <div class="d-flex justify-content-center">@Localizer["Page"] <p class="text-danger px-1">@(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)</p>@Localizer["from"] <p class="text-primary px-1">@Model.PageCount</p> @Localizer["Item No:"]  <p class="text-primary px-1">@Model.TotalItemCount</p> </div>
                    </div>
                }

            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="BalanceModal" tabindex="-1" aria-labelledby="BalanceLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5">@Localizer["Add Balance"]</h1>
                <i class="fa-solid fa-circle-xmark modal-Close" data-bs-dismiss="modal"
                   aria-label="Close"></i>
            </div>
            <br />
            <div class="row">
                <div class="col-md-12 col-sm-12 col-xs-12">
                    <div class="x_panel">
                        <div class="x_content">
                            <form id="BalanceForm">
                                <div class="row">
                                    <div class="col-12">
                                        <div class="position-relative">
                                            <label class="form-label">@Localizer["Amount"]:</label><span class="required">*</span>
                                            <input class="form-control" type="number" id="BalanceValue" name="BalanceValue" min="5" step="5" required />
                                            <button class="btn btn-primary position-absolute" style="top:33px;right:0" disabled> @Html.Raw(currency.Icon)</button>
                                        </div>
                                    </div>
                                </div>
                                <div class="mt-4 d-flex justify-content-center">
                                    <button onclick="AddBalance()" class="btn btn-primary px-3 py-2">@Localizer["Add Balance"]</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    function OpenAddBalance() {
        $("#BalanceModal").modal("show")
    }

    function AddBalance() {
        if ($("#BalanceForm").valid()) {
            ShowSpinner();
            $.ajax({
                type: "POST",
                url: "/Student/StudentBalanceHistory/AddBalance/",
                data: { balance: $("#BalanceValue").val() },
                headers: {
                    'RequestVerificationToken': Token
                },
                success: function (data) {
                    HideSpinner();
                    $("#BalanceModal").modal("show");
                    window.location.replace(data);
                }
            }).fail(function (jqXHR, textStatus, error) {
                HideSpinner();
                toastr.error("@Localizer["Error Occurred"]")
            });
        }
    }
</script>